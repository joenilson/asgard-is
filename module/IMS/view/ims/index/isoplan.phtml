<?php

/* 
 * Copyright (C) 2014 Joe Nilson <joenilson at gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

?>
<script>
function deployCombos(comboField,comboValue){
    var combo = form<?=$this->panelId;?>.getForm().findField(comboField);
    var store = combo.store;
    store.on("load", function(store, records, state, operation, opts) {
            combo.setValue(comboValue);
    });
}

function fnCCLPProcess(button, opt, obj) {
    var values = button.up('form').getForm().getValues();
    var companies = values['companiesCombo'];
    var countries = values['countriesCombo'];
    var locations = values['locationsCombo'];
    var process_id = values['processCombo'];
    panel<?=$this->panelId;?>.removeAll();
    panelStore.load({params: { company: companies, country: countries, location: locations, process: process_id } });
    //gridStore<?= $this->panelId; ?>.load({ params: { module: 'master', company: companies, country: countries, location: locations  }});

}


var form<?=$this->panelId;?> = Ext.create('Asgard.lib.forms.comboCCLP', { innerPanel: panel<?=$this->panelId;?> });
//var gridStore<?= $this->panelId; ?> = new Ext.create('Asgard.store.IsoPlan');


/*
var innerpanel<?=$this->panelId;?> = Ext.create('Asgard.lib.Panels.ISOPlanDetailPanel',{
    title: 'Manual',
    minHeight: 300,
    flex: 1
});
*/
   
var panelStore = Ext.create('Asgard.store.Process',{ autoLoad: false });
var panel<?=$this->panelId;?> = Ext.create('Asgard.lib.Panels.ISOPlanPanel',{
    companiesValue: '<?=$this->companyId;?>',
    countriesValue: '<?=$this->countryId;?>',
    locationsValue: '<?=$this->locationId;?>',
    autoScroll: true,
    flex: 1,
    
    /*
    items: [{
        title: 'Inner Panel',
        flex: 1,
        autoScroll: true,
        items: [
            innerpanel<?=$this->panelId;?>
        ]        
    },
        innerpanel<?=$this->panelId;?>
    ,{
        title: 'Inner Panel 2',
        //flex: 1,
        minHeight: 300,
        autoScroll: true,
        items: [
            innerpanel<?=$this->panelId;?>
        ]
    }]
    */
});
panelStore.on('load', function(storeLoaded){
    //console.log(loading);
    //panel<?=$this->panelId;?>.store.on('load', function(storeLoaded){
    var panels = [];
    storeLoaded.each(function(rec) {
        var newItem = new Ext.create('Asgard.lib.Panels.ISOPlanDetailPanel',{
            id: 'isoplan_process_'+rec.data.id,
            title: rec.data.value,
            autoScroll: true,
            process_id: rec.data.id,
            companiesValue: rec.data.company,
            countriesValue: rec.data.country,
            locationsValue: rec.data.location
        });
        panels.push(newItem);
    });
    panel<?=$this->panelId;?>.add(panels);
    }, panel<?=$this->panelId;?>);

deployCombos('companiesCombo','<?=$this->companyId;?>');
deployCombos('countriesCombo','<?=$this->countryId;?>');
deployCombos('locationsCombo','<?=$this->locationId;?>');

var libraryViewport<?=$this->panelId; ?> = Ext.create('Ext.panel.Panel', {
    layout: {
        type: 'vbox',
        align : 'stretch',
        pack  : 'start'
    },
    items: [
        form<?=$this->panelId; ?>,
        panel<?=$this->panelId; ?>
   ]
});
Ext.getCmp('content-panel').getActiveTab().add(libraryViewport<?= $this->panelId; ?>);
</script>