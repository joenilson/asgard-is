<?php
/**
 * @application Asgard Information System :: asgard-is
 * @version 1.0.0 devel
 * @author Joe Nilson <joenilson@gmail.com>
 */
?>
<script>
<?php
if(!empty($this->userRole)){
    $var=str_replace(' ','',$this->userRole);
    echo "var toolbarType".$this->panelId." = Ext.create('Asgard.lib.gridToolbar".$var."',{titleBarText: '<b>".$this->HiraGridTitle."</b>'});\n";
}
?>
/**
* Custom function used for column renderer
* @param {Object} val
*/
function riskleveler(val, meta) {
    if (val < 9 && val > 0) {
        meta.tdCls = 'red-column';
    } else if (val < 16 && val > 8) {
        meta.tdCls = 'yellow-column';
    } else if (val > 15) {
        meta.tdCls = 'green-column';
    }
    return val;
}

var <?php echo 'rowEditing'.$this->panelId; ?> = Ext.create('Ext.grid.plugin.RowEditing', {
    clicksToMoveEditor: 1,
    autoCancel: false
});

var <?php echo 'HIRAStore'.$this->panelId; ?> = Ext.create('Asgard.store.HiraDocuments');
<?php echo 'HIRAStore'.$this->panelId.'.load();'; ?>

var <?php echo 'HIRAGridPanel'.$this->panelId; ?> = Ext.create('Asgard.lib.GridPanel', {
  autoShow: true,
  autoDestroy: true,
  autoScroll: true,
  border: false,
  frame: false,
  region: 'center',
  layout: 'fit',
  flex: 0.90,
  selType: 'checkboxmodel',
  store: <?php echo 'HIRAStore'.$this->panelId; ?>,
  dockedItems: [{
    xtype: toolbarType<?php echo $this->panelId; ?>
  }],
  columns: {
      plugins: [{
            ptype: 'gridautoresizer'
            
        }
    ],
      items: [
            {text: "Id", flex:0.25, sortable: true, dataIndex: 'id_danger_risk', hidden: true },
            {text: "<?=$this->HiraGridHeaderTypeProcess; ?>", flex:1, sortable: true, filter: 'combo', dataIndex: 'type_desc', tdCls: 'wrapText'},
            {text: "<?=$this->HiraGridHeaderProcess; ?>", flex:1, sortable: true, filter: 'combo', dataIndex: 'process_sup_desc', tdCls: 'wrapText'},
            {text: "<?=$this->HiraGridHeaderSubProcess; ?>", flex:1.3, sortable: true, filter: 'combo', dataIndex: 'process_main_desc', tdCls: 'wrapText'},
            {text: "<?=$this->HiraGridHeaderDangerDesc; ?>", flex:1.5, sortable: true, filter: 'combo', dataIndex: 'desc_danger', tdCls: 'wrapText'},
            {text: "<?=$this->HiraGridHeaderRiskDesc; ?>", flex:1.2, sortable: true, filter: true, dataIndex: 'desc_risk', tdCls: 'wrapText'},
            {text: "<?=$this->HiraGridHeaderHiraEval; ?>",
            columns: [{
                    text     : '<?=$this->HiraGridHeaderScaleHigh; ?>',
                    width    : 50,
                    sortable : true,
                    filter: true,
                    dataIndex: 'eval_iper_h',
                    align: 'center',
                    renderer : riskleveler,
                    editor : { xtype: 'numberfield', allowBlank: false, minValue: 0, maxValue: 25,
                        hideTrigger: true, keyNavEnabled: false, mouseWheelEnabled: false
                    }
                }, {
                    text     : '<?=$this->HiraGridHeaderScaleMedium; ?>',
                    width    : 50,
                    sortable : true,
                    filter: true,
                    renderer :  riskleveler,
                    align: 'center',
                    dataIndex: 'eval_iper_m',
                    editor : { xtype: 'numberfield', allowBlank: false, minValue: 0, maxValue: 25,
                        hideTrigger: true, keyNavEnabled: false, mouseWheelEnabled: false
                    }
                }, {
                    text     : '<?=$this->HiraGridHeaderScaleLow; ?>',
                    width    : 50,
                    sortable : true,
                    align: 'center',
                    filter: true,
                    renderer : riskleveler,
                    dataIndex: 'eval_iper_l',
                    editor : { xtype: 'numberfield', allowBlank: false, minValue: 0, maxValue: 25,
                        hideTrigger: true, keyNavEnabled: false, mouseWheelEnabled: false
                    }
                }]
            },
            {text: "<?=$this->HiraGridHeaderMeasures; ?>", flex:1.2, sortable: true, filter: true, dataIndex: 'control_measures', 
                editor: {
                    xtype: 'textareafield', allowBlank: false
                },
                tdCls: 'wrapText'
            },
            {text: "<?=$this->HiraGridHeaderResidualRiskEval; ?>",
            columns: [{
                    text     : '<?=$this->HiraGridHeaderScaleHigh; ?>',
                    width    : 50,
                    sortable : true, 
                    filter: true,
                    align: 'center',
                    dataIndex: 'eval_risk_h',
                    renderer : riskleveler,
                    editor : { xtype: 'numberfield', allowBlank: false, minValue: 0, maxValue: 25,
                        hideTrigger: true, keyNavEnabled: false, mouseWheelEnabled: false
                    }
                }, {
                    text     : '<?=$this->HiraGridHeaderScaleMedium; ?>',
                    width    : 50,
                    sortable : true, 
                    filter: true,
                    align: 'center',
                    renderer : riskleveler,
                    dataIndex: 'eval_risk_m',
                    editor : { xtype: 'numberfield', allowBlank: false, minValue: 0, maxValue: 25,
                        hideTrigger: true, keyNavEnabled: false, mouseWheelEnabled: false
                    }
                }, {
                    text     : '<?=$this->HiraGridHeaderScaleLow; ?>',
                    width    : 50,
                    sortable : true, 
                    filter: true,
                    align: 'center',
                    renderer : riskleveler,
                    dataIndex: 'eval_risk_l',
                    editor : { xtype: 'numberfield', allowBlank: false, minValue: 0, maxValue: 25,
                        hideTrigger: true, keyNavEnabled: false, mouseWheelEnabled: false
                    }
                }]
            }
        ]
    },
});

<?php
if ($this->userRole!='Viewer'){
    echo 'rowEditing'.$this->panelId.".init(HIRAGridPanel".$this->panelId.");\n\r";
    echo "HIRAGridPanel".$this->panelId.".plugins.push(rowEditing".$this->panelId.");\n\r";
}
?>
function onClick(btn){
    var tbar<?php echo $this->panelId; ?> = <?php echo 'HIRAGridPanel'.$this->panelId; ?>.getDockedItems('toolbar[dock="top"]')[0];
    switch (btn.name){
        case "edit":
            tbar<?php echo $this->panelId; ?>.down('#save').setDisabled(false);
            tbar<?php echo $this->panelId; ?>.down('#cancel').setDisabled(false);
            tbar<?php echo $this->panelId; ?>.down('#edit').setDisabled(true);
            
            <?php echo 'HIRAGridPanel'.$this->panelId; ?>.removeAll();
            var items = [
                {
                    xtype: 'rb-versioning'
                },
                {
                    xtype: 'rb-scope'
                },
                { 
                    xtype: 'rtfeditor', name: 'rtfeditor', value: panelContent<?php echo $this->panelId; ?>, height: '95%', anchor: '100%'
                }];
            <?php echo 'HIRAGridPanel'.$this->panelId; ?>.add(items);
            <?php echo 'HIRAGridPanel'.$this->panelId; ?>.doLayout();
            break;
        case "add":
            console.log('Add lib class to be implemented.');
            break;
        case "remove":
            console.log('Remove lib class to be implemented.');
            break;
    }
}

var <?php echo 'HiraSpecs'.$this->panelId; ?> = Ext.create('Ext.Panel', {
    collapsible: true,
    frame: false,
    region: 'north',
    titleAlign: 'right',
    collapsed: true,
    title: '<?php echo $this->titleHiraSpecs; ?>',
    loader: {
        url: 'ims/hiraspecs/<?php echo $this->moduleId; ?>',
        autoLoad: true,
        scripts: true
    }
});

var <?php echo 'HiraPanel'.$this->panelId; ?> = Ext.create('Ext.Panel', {
    frame: false,
    layout: 'border',
    items: [ 
        <?php echo 'HiraSpecs'.$this->panelId; ?>,
        <?php echo 'HIRAGridPanel'.$this->panelId; ?>
    ]
});


Ext.getCmp('content-panel').getActiveTab().add(<?php echo 'HiraPanel'.$this->panelId; ?>);
</script>