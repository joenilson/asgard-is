<?php
/**
 * @application Asgard Information System :: asgard-is
 * @version 1.0.0 devel
 * @author Joe Nilson <joenilson@gmail.com>
 */
?>
<style>

</style>
<script>
    function riskleveler(val, meta) {
        if (val > 2 ) {
            meta.tdCls = 'red-column';
        } else if (val == 2) {
            meta.tdCls = 'yellow-column';
        } else if (val == 1) {
            meta.tdCls = 'green-column';
        } else if (val == 0 || val == null){
            return "";
        }
        return val;
     }
    
    function fnSummaryRender(value)
    {
        var formatedValue =  (value  == 0 || value == null ) ? "":value;
        //return Ext.String.format("<span style=\'float:right;\'>{0}</span>",formatedValue);
        return formatedValue;
    }
    
    
    /*
     * Store to get the List of Companies
     */
    var <?php echo 'CompaniesStore' . $this->panelId; ?> = Ext.create('Asgard.store.Companies');
    <?php echo 'CompaniesStore' . $this->panelId . '.load();'; ?>
    
    /*
     * Store to get the List of Countries
     */
    var <?php echo 'CountriesStore' . $this->panelId; ?> = Ext.create('Asgard.store.Countries');

    /*
     * Store to get the List of Locations
     */
    var <?php echo 'LocationsStore' . $this->panelId; ?> = Ext.create('Asgard.store.Locations');

    /*
     * Store to get the List of Incidents Type
     */
    var <?php echo 'HIRAStoreIT' . $this->panelId; ?> = Ext.create('Asgard.store.HiraIncidentsType');
<?php echo 'HIRAStoreIT' . $this->panelId . '.load();'; ?>

    /*
     * Store to get the Incidents' Details
     */
    var <?php echo 'HIRAStoreID' . $this->panelId; ?> = Ext.create('Asgard.store.HiraIncidentsDetails');

    /*
     * Grid to show the Store HIRAStoreID
     */
    var showSummary = true;
    var <?php echo 'HIRAGridID' . $this->panelId; ?> = Ext.create('Asgard.lib.GridPanel', {
        autoShow: true,
        autoDestroy: true,
        autoScroll: true,
        border: false,
        frame: false,
        //region: 'west',
        //collapsible: true,
        flex: 1,
        title: 'Detalles de Incidentes',
        store: <?php echo 'HIRAStoreID' . $this->panelId; ?>,
        features: [{
            id: 'group',
            ftype: 'groupingsummary',
            groupHeaderTpl: '{name}',
            hideGroupedHeader: true,
            enableGroupingMenu: true
        }],
        columns: {
            items: [
                {text: "Id", flex: 0.25, sortable: true, dataIndex: 'val_incident', filter: true, summaryType: 'count',
                    summaryRenderer: function(value, summaryData, dataIndex) {
                        return ((value === 0 || value > 1) ? '(' + value + ' Incidents)' : '(1 Incident)');
                    }
                },
                {text: "Description", flex: 0.75, sortable: true, filter: 'combo', dataIndex: 'description', tdCls: 'wrapText',
                    summaryType: 'count',
                    summaryRenderer: function(value, summaryData, dataIndex) {
                        return ((value === 0 || value > 1) ? '(' + value + ' Incidents)' : '(1 Incident)');
                    }
                },
                {text: "Author", flex: 0.45, sortable: true, filter: 'combo', dataIndex: 'owner_fullname', tdCls: 'wrapText'},
                {text: "Date", flex: 0.45, sortable: true, filter: 'date', dataIndex: 'date_incident', tdCls: 'wrapText'},
                {text: "Status", flex: 0.15, sortable: true, filter: true, dataIndex: 'status'},
            ]
        }
    });
  


/*
 * 
 * Dynamic Model to Incidents List Store
 */
Ext.define('Asgard.model.HiraIncidentsList<?php echo $this->panelId; ?>', {
    extend: 'Ext.data.Model',
    fields: [
        'date_incident',
        <?php
        foreach($this->listIT as $values ){
            echo "{name: '".$values->id_incident."', type: 'int' },";
        }
        ?>
        {name: 'summaryIncidents', type: 'int' }
    ]
});

/*
 * Store to get the List of Incident registered
 */
var <?php echo 'HIRAStoreIL' . $this->panelId; ?> = Ext.create('Asgard.store.HiraIncidentsList',{
    model: 'Asgard.model.HiraIncidentsList<?php echo $this->panelId; ?>'
});

/*
 * Grid to show the Store HIRAStoreIT
 */
var <?php echo 'HIRAGridIT' . $this->panelId; ?> = Ext.create('Asgard.lib.GridPanel', {
    autoShow: true,
    autoDestroy: true,
    autoScroll: true,
    border: false,
    frame: false,
    region: 'west',
    collapsible: true,
    flex: 0.2,
    title: 'Tipo de Incidente',
    store: <?php echo 'HIRAStoreIT' . $this->panelId; ?>,
    columns: {
        plugins: [{
                ptype: 'gridautoresizer'
            }],
        items: [
            {text: "Id", flex: 0.25, sortable: true, dataIndex: 'id_incident', filter: true},
            {text: "Description", flex: 0.75, sortable: true, filter: 'combo', dataIndex: 'val_incident', tdCls: 'wrapText'}
        ]
    }
});

 /*
 * Grid to show the Incidents List
 */
var <?php echo 'HIRAGridIL' . $this->panelId; ?> = Ext.create('Asgard.lib.GridPanel', {
    autoScroll: true,
    border: false,
    plain: false,
    width: '100%',
    features: [{
        ftype: 'fixedsummary',
    }],
    fixedsummarytips : true,
    flex: 1,
    title: 'Lista de Incidentes',
    store: <?php echo 'HIRAStoreIL' . $this->panelId; ?>,
    tools: [{
        type: 'plus',
        tooltip: 'Add Incident',
        handler: fnLibraryTool
    }],
    columns: {
            /*
            plugins: [{
                ptype: 'gridautoresizer'
            }],
            */
        items: [
            {text: "Fecha", flex: 3, sortable: true, dataIndex: 'date_incident', align: 'center', filter: false, //format:'Y-m-d', 
                fixedSummaryRenderer: function(){ return "<b>Incidentes</b>"; }},
            <?php
            foreach($this->listIT as $values ){
                echo "{text: \"T{$values->id_incident}\", flex: 1, sortable: true, renderer :  riskleveler, dataIndex:'{$values->id_incident}', align: 'right', filter: false, "
                ."fixedSummaryType: 'sum', fixedSummaryRenderer: riskleveler"
                ."},\n";
            }
            ?>
            {text: "Total Incidentes Dia", flex: 2, sortable: true, dataIndex: 'summaryIncidents', renderer: riskleveler, align: 'right', filter: false, 
                fixedSummaryType: 'sum', fixedSummaryRenderer: riskleveler 
            }
        ]
    }
});


function fnLibraryTool(action,mark,form,tool){
    console.log(form);
    console.log(tool);
    if(tool.type==='plus'){
        winAdd = Ext.create('Asgard.lib.window.windowGeneric',{
            title: 'Crear Incidente',
        });
        winAdd.add(Ext.create('Asgard.lib.forms.hiraNewIncident'));
        console.log('mostramos la ventana para agregar un incidente');
        winAdd.show();
    }
}
  
  <?php echo 'HIRAGridIL' . $this->panelId; ?>.on('itemdblclick', function(me, record){
            //call window to show list of incidents
            var companiesValue = <?php echo 'CompaniesCombo' . $this->panelId; ?>.getValue();
            var countriesValue = <?php echo 'CountriesCombo' . $this->panelId; ?>.getValue();
            var locationsValue = <?php echo 'LocationsCombo' . $this->panelId; ?>.getValue();
            var dateValue = record.data.date_incident;
            <?php echo 'HIRAStoreID' . $this->panelId; ?>.load({params: {'company': companiesValue,'country': countriesValue, 'location': locationsValue, 'date_incident': dateValue}});
            windowDetails<?php echo $this->panelId; ?>.show();

        });


/*
 * Window Details to display Grid Incidents' Details
 */
var windowDetails<?php echo $this->panelId; ?> = Ext.create('Asgard.lib.hiraIncidentsDetails', {
    layout: 'fit',
    title: 'Details',
    closeAction: 'hide',
    height: '450px',
    width: '80%',
    items: [
        <?php echo 'HIRAGridID' . $this->panelId; ?>
    ]

});
  
    /*
     * 
     */
    var <?php echo 'CompaniesCombo' . $this->panelId; ?> = Ext.create('Ext.form.ComboBox', {
        fieldLabel: 'Compañia',
        store: <?php echo 'CompaniesStore' . $this->panelId; ?>,
        queryMode: 'local',
        displayField: 'legal_name',
        valueField: 'id',
        anchor: '50%',
        name: 'companiesCombo',
        forceSelection: true,
        emptyText: 'No values at this time',
        listeners: {
            select: function(combo, records, opts) {
            <?php echo 'CountriesStore' . $this->panelId; ?>.load({params: {cid: combo.getValue('id')}});
            }
        }
    });
    /*
     * 
     */
    var <?php echo 'CountriesCombo' . $this->panelId; ?> = Ext.create('Ext.form.ComboBox', {
        fieldLabel: 'Pais',
        store: <?php echo 'CountriesStore' . $this->panelId; ?>,
        queryMode: 'local',
        displayField: 'name',
        valueField: 'id',
        anchor: '50%',
        name: 'countriesCombo',
        forceSelection: true,
        emptyText: 'No values at this time',
        listeners: {
            select: function(combo, records, opts) {
            <?php echo 'LocationsStore' . $this->panelId; ?>.load({params: {cid: combo.getValue('id')}});
            }
        }
    });

    /*
     * 
     */
    var <?php echo 'LocationsCombo' . $this->panelId; ?> = Ext.create('Ext.form.ComboBox', {
        fieldLabel: 'Ubicación',
        store: <?php echo 'LocationsStore' . $this->panelId; ?>,
        queryMode: 'local',
        forceSelection: true,
        required: true,
        displayField: 'location_name',
        valueField: 'id',
        name: 'locationsCombo',
        anchor: '25%',
        emptyText: 'No values at this time',
    });

    /*
     * Form Panel to attach
     */
    var <?php echo 'formHiraIL' . $this->panelId; ?> = Ext.create('Ext.form.Panel', {
        border: false,
        plain: false,
        width: '100%',
        fieldDefaults: {
            labelAlign: 'top',
            msgTarget: 'side'
        },
        bodyStyle: 'padding:5px 5px 5px',
        defaults: {
            border: false,
            xtype: 'panel',
            flex: 1,
            layout: 'anchor'
        },
        layout: 'hbox',
        items: [
            <?php echo 'CompaniesCombo' . $this->panelId; ?>,
            <?php echo 'CountriesCombo' . $this->panelId; ?>,
            <?php echo 'LocationsCombo' . $this->panelId; ?>,
            {
                xtype: 'monthfield', name: 'monthfield', submitFormat: 'Y-m-d', fieldLabel: 'Mes y Año', format: 'F, Y', anchor: '25%'
            }
        ],
        buttons: ['->', {
                text: 'Consultar',
                handler: function() {
                    var values = this.up('form').getForm().getValues();
                    //console.log(values);
                    var companies = values['companiesCombo'];
                    var countries = values['countriesCombo'];
                    var locations = values['locationsCombo'];
                    var monthfield = values['monthfield'];
<?php echo 'HIRAStoreIL' . $this->panelId; ?>.load({params: {'companies': companies,'countries': countries, 'locations': locations, 'monthfield': monthfield}});
                }
            }]
    });


    /*
     * Viewport to show the Incidents Type and the Incidents List
     */
    var <?php echo 'viewportHiraIL' . $this->panelId; ?> = Ext.create('Ext.Panel', {
        title: 'Analisis de Incidentes',
        layout: {
            type: 'border',
            padding: 0
        },
        items: [
<?php echo 'HIRAGridIT' . $this->panelId; ?>,
            {
                region: 'center',
                layout: 'vbox',
                flex: 0.8,
                items: [
                    <?php echo 'formHiraIL' . $this->panelId; ?>,
                    <?php echo 'HIRAGridIL' . $this->panelId; ?>
                    
                ]
            },
        ]
    });
    Ext.getCmp('content-panel').getActiveTab().add(<?php echo 'viewportHiraIL' . $this->panelId; ?>);
</script>