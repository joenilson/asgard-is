<script>
<?php
if(!empty($this->role)){
  $var=str_replace(' ','',$this->role);
  echo "var panelVersioning".$this->panelId." = '".$this->panelVersioning."';\n";
  echo "var panelContent".$this->panelId." = '".$this->panelContent."';\n";
  echo "var emptyContent".$this->panelId." = '".$this->message."';\n";
  echo "var toolbarType".$this->panelId." = '".$var."-toolbar';\n";
}
?>
Ext.tip.QuickTipManager.init();
var objectivesStore<?= $this->panelId; ?> = new Ext.create('Asgard.store.Objetives');

function showObjetives(){
    var objectivesgrid<?=$this->panelId;?> = Ext.create('Asgard.lib.grid.objetives', { 
        store: objectivesStore<?= $this->panelId; ?>, 
        id: 'grid<?=$this->panelId;?>'
    });
    winAdd = Ext.create('Asgard.lib.window.windowGeneric',{
        height: document.documentElement.clientHeight - 50,
        width: document.documentElement.clientWidth - 550,
    });
    winAdd.setTitle('Objetivos');
    winAdd.add(objectivesgrid<?=$this->panelId;?>);
    //console.log('mostramos la ventana para agregar un incidente');
    winAdd.show();


objectivesStore<?= $this->panelId; ?>.load({ params: { module: 'master', company: '<?=$companyId;?>', country: '<?=$countryId;?>', location: '<?=$locationId;?>'  }});
}

var versioningHeader<?php echo $this->panelId; ?> = Ext.create('Asgard.lib.versioningContent',{
    anchor: '100%',
    versionField: {
        value: "<?php echo $this->versioningContent; ?>"
    },
    validField: {
        value: "<?php echo $this->versioningDate; ?>"
    },
    scopeField: {
        value: "<?php echo $this->documentScope; ?>"
    }
});
var oItems<?php echo $this->panelId; ?> = Ext.String.htmlDecode(panelContent<?php echo $this->panelId; ?>);
var originalItems<?php echo $this->panelId; ?> = [{ 
        xtype: 'container',
        anchor: '100%',
        name: 'dataContainer',
        html: oItems<?php echo $this->panelId; ?>+emptyContent<?php echo $this->panelId; ?>
    }];

var <?php echo 'Panel'.$this->panelId; ?> = Ext.create('Asgard.lib.RTFPanel', {
  dockedItems: [{
    xtype: toolbarType<?php echo $this->panelId; ?>
  }, versioningHeader<?php echo $this->panelId; ?>],
  url: '/ims/saveContent/<?php echo $this->contentId; ?>',
  autoShow: true,
  autoDestroy: true,
  autoScroll: true,
  border: false,
  frame: false,
  layout: 'anchor',
  items: originalItems<?php echo $this->panelId; ?>
});

function onClick(btn){
    var tbar<?php echo $this->panelId; ?> = <?php echo 'Panel'.$this->panelId; ?>.getDockedItems('toolbar[dock="top"]')[0];
    switch (btn.name){
        case "search":
            console.log('Search lib class to be implemented.');
            break;
        case "edit":
            tbar<?php echo $this->panelId; ?>.down('#save').setDisabled(false);
            tbar<?php echo $this->panelId; ?>.down('#cancel').setDisabled(false);
            tbar<?php echo $this->panelId; ?>.down('#edit').setDisabled(true);
            
            <?php echo 'Panel'.$this->panelId; ?>.removeAll();
            var items = [
                {
                    xtype: 'rb-versioning'
                },
                {
                    xtype: 'rb-scope'
                },
                { 
                    xtype: 'rtfeditor', name: 'rtfeditor', value: panelContent<?php echo $this->panelId; ?>, height: '95%', anchor: '100%'
                }];
            <?php echo 'Panel'.$this->panelId; ?>.add(items);
            <?php echo 'Panel'.$this->panelId; ?>.doLayout();
            break;
        case "add":
            console.log('Add lib class to be implemented.');
            break;
        case "remove":
            console.log('Remove lib class to be implemented.');
            break;
        case "save":
            
            tbar<?php echo $this->panelId; ?>.down('#save').setDisabled(true);
            tbar<?php echo $this->panelId; ?>.down('#cancel').setDisabled(true);
            tbar<?php echo $this->panelId; ?>.down('#edit').setDisabled(false);
            
            var editedContent = <?php echo 'Panel'.$this->panelId; ?>.items.items[2].value;
            if (editedContent !== panelContent<?php echo $this->panelId; ?>){
                console.log('changes detected');
                <?php echo 'Panel'.$this->panelId; ?>.form.submit({
                    params: {
                        content_versioning: '<?php echo $this->versioningContent; ?>'
                    },
                    success: function(form, action) {
                        Ext.getCmp('content-panel').getActiveTab().removeAll();
                        Ext.getCmp('content-panel').getActiveTab().getLoader().load();
                    },
                    failure: function(form, action) {
                        Ext.Msg.alert('Failed', action.msg);
                    }
                });
            }else{
                console.log('no changes detected');
                <?php echo 'Panel'.$this->panelId; ?>.removeAll();
                <?php echo 'Panel'.$this->panelId; ?>.add(originalItems<?php echo $this->panelId; ?>);
                <?php echo 'Panel'.$this->panelId; ?>.doLayout();
            }
            break;
        case "cancel":
            tbar<?php echo $this->panelId; ?>.down('#save').setDisabled(true);
            tbar<?php echo $this->panelId; ?>.down('#cancel').setDisabled(true);
            tbar<?php echo $this->panelId; ?>.down('#edit').setDisabled(false);

            <?php echo 'Panel'.$this->panelId; ?>.removeAll();
            <?php echo 'Panel'.$this->panelId; ?>.add(originalItems<?php echo $this->panelId; ?>);
            <?php echo 'Panel'.$this->panelId; ?>.doLayout();
            break;
        default:
            
            break;
    }
}
Ext.getCmp('content-panel').getActiveTab().add(<?php echo 'Panel'.$this->panelId; ?>);
</script>