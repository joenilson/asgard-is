<?php

/* 
 * Copyright (C) 2014 Joe Nilson <joenilson at gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

?>
<script>
function lightbox(){
    console.log($('.thumbsimulations a'));
    $('.thumbsimulations a').lightBox({
        imageLoading: '<?=$this->basePath('images/lightbox/loading.gif');?>',
        imageBtnClose: '<?=$this->basePath('images/lightbox/close.gif');?>',
        imageBtnPrev: '<?=$this->basePath('images/lightbox/prevlabel.gif');?>',
        imageBtnNext: '<?=$this->basePath('images/lightbox/nextlabel.gif');?>',
        imageBlank: '<?=$this->basePath('images/lightbox/lightbox-blank.gif');?>'
    });
}

function deployCombos(comboField,comboValue){
    var combo = form<?=$this->panelId;?>.getForm().findField(comboField);
    var store = combo.store;
    store.on("load", function(store, records, state, operation, opts) {
            combo.setValue(comboValue);
    });
}

function fnCCLProcess(button, opt, obj) {
    var values = button.up('form').getForm().getValues();
    var companies = values['companiesCombo'];
    var countries = values['countriesCombo'];
    var locations = values['locationsCombo'];

    gridStore<?= $this->panelId; ?>.load({ params: { module: 'master', company: companies, country: countries, location: locations }});

}
var gridStore<?= $this->panelId; ?> = new Ext.create('Asgard.store.SimulationAlbums');
var viewStore<?= $this->panelId; ?> = new Ext.create('Asgard.store.SimulationPhotos');

var form<?=$this->panelId;?> = Ext.create('Asgard.lib.forms.comboCCL', { innerGrid: 'gridSimulationAlbums' });

var grid<?=$this->panelId;?> = Ext.create('Asgard.lib.grid.simulationsalbums', { 
    store: gridStore<?= $this->panelId; ?>, 
    id: 'gridSimulationAlbums',
    region: 'west',
    layout: 'fit',
    flex: 1,
    height: '100%'
});
var innerview<?=$this->panelId;?> = Ext.create('Asgard.lib.dataview.drillsphotos', { 
    store: viewStore<?= $this->panelId; ?>,
    flex: 1,
    id: 'innerview<?=$this->panelId;?>',
    listeners: {
        dblclick: {
            element: 'el', //bind to the underlying el property on the panel
            fn: function(dv, node, o, b){ 
                var selected = innerview<?=$this->panelId;?>.getSelectionModel().getSelection();
                var store = innerview<?=$this->panelId;?>.getStore();
                var index = store.indexOf(selected[0]);
                var imgData = [];
                var imgDataInner = [];
                store.each(function(record,idx){
                    imgData[idx] = new Array(record.get('filename'),record.get('description'));
                });
                if(selected[0].data.filename !== ''){ 
                    jQuery.slimbox(imgData,index);
                }
            }
        }
    }
    
});

var view<?=$this->panelId; ?> = Ext.create('Asgard.lib.Panels.drillsPhotosPanel',{
    id: 'panelSimulationAlbums',
    items: innerview<?=$this->panelId;?>,
    region: 'center',
    layout: 'fit',
    flex: 3,
    height: '100%'
    
});

grid<?=$this->panelId;?>.getSelectionModel().on('selectionchange', function(sm, selectedRecord) {
    if ((selectedRecord.length)) {
        viewStore<?= $this->panelId; ?>.load({ params: { album_id: selectedRecord[0].data.id }});
        view<?=$this->panelId; ?>.albumId = selectedRecord[0].data.id;
    }
});

deployCombos('companiesCombo','<?=$this->companyId;?>');
deployCombos('countriesCombo','<?=$this->countryId;?>');
deployCombos('locationsCombo','<?=$this->locationId;?>');

var libraryViewport<?=$this->panelId; ?> = Ext.create('Ext.panel.Panel', {
    layout: {
        type: 'vbox',
        align : 'stretch',
        pack  : 'start'
    },
    items: [
        form<?=$this->panelId; ?>,
    {   
        //layout: 'hbox',
        flex: 1,
        layout: 'hbox',
        xtype: 'panel',
        items: [
            grid<?=$this->panelId; ?>,
            view<?=$this->panelId; ?>
        ]
    }
        
   ]
});
Ext.getCmp('content-panel').getActiveTab().add(libraryViewport<?= $this->panelId; ?>);
</script>

